<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd  http://www.springframework.org/schema/aop     http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- spring context -->
	<context:annotation-config/>

	<!-- spring context -->
	<context:component-scan base-package="com.digiwin.demo.assess.**"/>

	<!-- config utils -->	
	<bean class="com.digiwin.app.module.DWModuleConfigUtils" id="DWModuleConfigUtils"/>

	<!-- service input out aop -->	
	<bean class="com.digiwin.app.container.ServicePublicMethodLogInterceptor" id="serviceInputOutputInterceptor"/> 

    <aop:config proxy-target-class="true">                                          
        <aop:pointcut expression="execution(* com.digiwin.demo.assess..*.*(..))" id="logInputOutPointCut"/>
        <aop:advisor advice-ref="serviceInputOutputInterceptor" pointcut-ref="logInputOutPointCut"/>
    </aop:config>

	<!--================== 配置和MyBatis的整合=============== -->
<!--	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
<!--		&lt;!&ndash; 指定mybatis全局配置文件的位置 &ndash;&gt;-->
<!--		<property name="configLocation" value="classpath:conf/mybatis-config.xml"></property>-->
<!--		&lt;!&ndash;注入数据库连接池,注入平台配置&ndash;&gt;-->
<!--		<property name="dataSource" ref="dw-dataSource"></property>-->
<!--		&lt;!&ndash; 指定mybatis，mapper文件的位置 &ndash;&gt;-->
<!--		<property name="mapperLocations" value="classpath:mappers/**/*.xml"></property>-->
<!--	</bean>-->

	<bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
		<property name="dataSource" ref="dw-dataSource" />
		<property name="configLocation" value="classpath:conf/mybatis-config.xml"/>
		<property name="typeAliasesPackage" value="com.digiwin.demo.assess.pojo"/>
	</bean>

	<!-- 配置扫描器，将mybatis接口的实现加入到ioc容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描所有dao接口的实现，加入到ioc容器中 -->
		<property name="basePackage" value="com.digiwin.demo.assess.mapper" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>

	<!-- ===============事务控制的配置 ================ -->
	<bean id="dw-transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dw-proxyDataSource" />
	</bean>

	<tx:annotation-driven proxy-target-class="true" transaction-manager="dw-transactionManager" />

</beans>
